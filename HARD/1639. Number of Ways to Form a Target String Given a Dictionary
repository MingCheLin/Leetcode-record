class Solution:
    def numWays(self, words: List[str], target: str) -> int:
        dp = [0] * len(words[0])
        count_dict = dict()
        for i in range(len(target)):
            t = target[i]
            cum_sum = [0] * len(words[0])
            cum_sum[0] = dp[0]
            dp[0] = 0
            for j in range(1, len(words[0])):
                cum_sum[j] = cum_sum[j-1] + dp[j]
                dp[j] = 0
            for j in range(i, len(words[0])-len(target)+i+1):
                try:
                    t_num = count_dict[t][j]
                except:
                    t_num = 0
                    for l in range(len(words)):
                        if t == words[l][j]:
                            t_num += 1
                    try:
                        count_dict[t][j] = t_num
                    except:
                        count_dict[t] = dict()
                        count_dict[t][j] = t_num
                dp[j] = t_num * cum_sum[j-1] % (10**9+7) if i > 0 else t_num
        return sum(dp) % (10**9+7)
